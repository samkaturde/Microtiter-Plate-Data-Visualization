{"ast":null,"code":"var _jsxFileName = \"/Users/sam-mac/Documents/project/microtiter-plate-visualization/src/components/Heatmap.js\",\n  _s = $RefreshSig$();\n// src/components/Heatmap.js\nimport React, { useContext, useState } from 'react';\nimport { Tooltip } from 'react-tooltip';\nimport { DataContext } from '../contexts/DataContext';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Heatmap = () => {\n  _s();\n  const {\n    data\n  } = useContext(DataContext);\n  const [selectedMetric, setSelectedMetric] = useState(Object.keys(data[0] || {})[1]);\n  console.log(\" selectedMetric :: \", selectedMetric);\n  console.log(\" data :: \", data);\n  console.log(\" Object.keys(data[0] || {})[1] : \", Object.keys(data[0] || {})[1]);\n  const handleMetricChange = event => {\n    setSelectedMetric(event.target.value);\n  };\n  const getColor = value => {\n    const hue = (1 - value) * 240;\n    return `hsl(${hue}, 100%, 50%)`;\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Heatmap\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this), data.length > 0 && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Select Metric:\", /*#__PURE__*/_jsxDEV(\"select\", {\n          value: selectedMetric,\n          onChange: handleMetricChange,\n          children: Object.keys(data[0] || {}).slice(1).map(key => /*#__PURE__*/_jsxDEV(\"option\", {\n            value: key,\n            children: key\n          }, key, false, {\n            fileName: _jsxFileName,\n            lineNumber: 32,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: 'grid',\n          gridTemplateColumns: 'repeat(24, 1fr)',\n          gap: '1px'\n        },\n        children: data.map((well, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          \"data-tooltip-id\": \"tooltip\",\n          \"data-tooltip-content\": Object.entries(well).map(([key, value]) => `${key}: ${value}`).join('\\n'),\n          style: {\n            backgroundColor: getColor(parseFloat(well[selectedMetric])),\n            width: '20px',\n            height: '20px'\n          }\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Tooltip, {\n        id: \"tooltip\",\n        place: \"top\",\n        effect: \"solid\",\n        content: \"string\",\n        multiline: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 5\n  }, this);\n};\n_s(Heatmap, \"WvJK+RFmTyyPhpW0Kl4BZgXbKhg=\");\n_c = Heatmap;\nexport default Heatmap;\nvar _c;\n$RefreshReg$(_c, \"Heatmap\");","map":{"version":3,"names":["React","useContext","useState","Tooltip","DataContext","jsxDEV","_jsxDEV","Fragment","_Fragment","Heatmap","_s","data","selectedMetric","setSelectedMetric","Object","keys","console","log","handleMetricChange","event","target","value","getColor","hue","children","fileName","_jsxFileName","lineNumber","columnNumber","length","onChange","slice","map","key","style","display","gridTemplateColumns","gap","well","index","entries","join","backgroundColor","parseFloat","width","height","id","place","effect","content","multiline","_c","$RefreshReg$"],"sources":["/Users/sam-mac/Documents/project/microtiter-plate-visualization/src/components/Heatmap.js"],"sourcesContent":["// src/components/Heatmap.js\nimport React, { useContext, useState } from 'react';\nimport { Tooltip } from 'react-tooltip';\nimport { DataContext } from '../contexts/DataContext';\n\nconst Heatmap = () => {\n  const { data } = useContext(DataContext);\n  const [selectedMetric, setSelectedMetric] = useState(Object.keys(data[0] || {})[1]);\n\n  console.log(\" selectedMetric :: \", selectedMetric)\n  console.log(\" data :: \", data)\n  console.log(\" Object.keys(data[0] || {})[1] : \", Object.keys(data[0] || {})[1])\n\n  const handleMetricChange = (event) => {\n    setSelectedMetric(event.target.value);\n  };\n\n  const getColor = (value) => {\n    const hue = (1 - value) * 240;\n    return `hsl(${hue}, 100%, 50%)`;\n  };\n\n  return (\n    <div>\n      <h2>Heatmap</h2>\n      {data.length > 0 && (\n        <>\n          <label>\n            Select Metric:\n            <select value={selectedMetric} onChange={handleMetricChange}>\n              {Object.keys(data[0] || {}).slice(1).map((key) => (\n                <option key={key} value={key}>\n                  {key}\n                </option>\n              ))}\n            </select>\n          </label>\n          <div style={{ display: 'grid', gridTemplateColumns: 'repeat(24, 1fr)', gap: '1px' }}>\n            {data.map((well, index) => (\n              <div\n                key={index}\n                data-tooltip-id=\"tooltip\"\n                data-tooltip-content={Object.entries(well).map(([key, value]) => `${key}: ${value}`).join('\\n')}\n                style={{\n                  backgroundColor: getColor(parseFloat(well[selectedMetric])),\n                  width: '20px',\n                  height: '20px',\n                }}\n              ></div>\n            ))}\n          </div>\n          <Tooltip id=\"tooltip\" place=\"top\" effect=\"solid\" content='string' multiline={true}/>\n        </>\n      )}\n    </div>\n  );\n};\n\nexport default Heatmap;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}