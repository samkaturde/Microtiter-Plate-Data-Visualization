{"ast":null,"code":"var _jsxFileName = \"/Users/sam-mac/Documents/project/microtiter-plate-visualization/src/components/Heatmap.js\",\n  _s = $RefreshSig$();\n// src/components/Heatmap.js\nimport React, { useState } from 'react';\nimport { Tooltip } from 'react-tooltip';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Heatmap = ({\n  data\n}) => {\n  _s();\n  const [selectedMetric, setSelectedMetric] = useState(Object.keys(data[0] || {})[1]);\n  const handleMetricChange = event => {\n    setSelectedMetric(event.target.value);\n  };\n  const getColor = value => {\n    const hue = (1 - value) * 240;\n    return `hsl(${hue}, 100%, 50%)`;\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Heatmap\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      children: [\"Select Metric:\", /*#__PURE__*/_jsxDEV(\"select\", {\n        value: selectedMetric,\n        onChange: handleMetricChange,\n        children: Object.keys(data[0] || {}).slice(1).map(key => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: key,\n          children: key\n        }, key, false, {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: 'grid',\n        gridTemplateColumns: 'repeat(24, 1fr)',\n        gap: '1px'\n      },\n      children: data.map((well, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        \"data-tooltip-id\": `tooltip-${index}`,\n        \"data-tooltip-html\": Object.entries(well).map(([key, value]) => `${key}: ${value}`).join('<br>'),\n        style: {\n          backgroundColor: getColor(parseFloat(well[selectedMetric])),\n          width: '20px',\n          height: '20px'\n        }\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this), data.map((well, index) => /*#__PURE__*/_jsxDEV(Tooltip, {\n      id: `tooltip-${index}`\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 9\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 5\n  }, this);\n};\n_s(Heatmap, \"0M2HFtBxLfGI3CVPXFpl1ptvITg=\");\n_c = Heatmap;\nexport default Heatmap;\nvar _c;\n$RefreshReg$(_c, \"Heatmap\");","map":{"version":3,"names":["React","useState","Tooltip","jsxDEV","_jsxDEV","Heatmap","data","_s","selectedMetric","setSelectedMetric","Object","keys","handleMetricChange","event","target","value","getColor","hue","children","fileName","_jsxFileName","lineNumber","columnNumber","onChange","slice","map","key","style","display","gridTemplateColumns","gap","well","index","entries","join","backgroundColor","parseFloat","width","height","id","_c","$RefreshReg$"],"sources":["/Users/sam-mac/Documents/project/microtiter-plate-visualization/src/components/Heatmap.js"],"sourcesContent":["// src/components/Heatmap.js\nimport React, { useState } from 'react';\nimport { Tooltip } from 'react-tooltip';\n\nconst Heatmap = ({ data }) => {\n  const [selectedMetric, setSelectedMetric] = useState(Object.keys(data[0] || {})[1]);\n\n  const handleMetricChange = (event) => {\n    setSelectedMetric(event.target.value);\n  };\n\n  const getColor = (value) => {\n    const hue = (1 - value) * 240;\n    return `hsl(${hue}, 100%, 50%)`;\n  };\n\n  return (\n    <div>\n      <h2>Heatmap</h2>\n      <label>\n        Select Metric:\n        <select value={selectedMetric} onChange={handleMetricChange}>\n          {Object.keys(data[0] || {}).slice(1).map((key) => (\n            <option key={key} value={key}>\n              {key}\n            </option>\n          ))}\n        </select>\n      </label>\n      <div style={{ display: 'grid', gridTemplateColumns: 'repeat(24, 1fr)', gap: '1px' }}>\n        {data.map((well, index) => (\n          <div\n            key={index}\n            data-tooltip-id={`tooltip-${index}`}\n            data-tooltip-html={Object.entries(well).map(([key, value]) => `${key}: ${value}`).join('<br>')}\n            style={{\n              backgroundColor: getColor(parseFloat(well[selectedMetric])),\n              width: '20px',\n              height: '20px',\n            }}\n          ></div>\n        ))}\n      </div>\n      {data.map((well, index) => (\n        <Tooltip id={`tooltip-${index}`} key={index} />\n      ))}\n    </div>\n  );\n};\n\nexport default Heatmap;\n"],"mappings":";;AAAA;AACA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,OAAO,QAAQ,eAAe;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExC,MAAMC,OAAO,GAAGA,CAAC;EAAEC;AAAK,CAAC,KAAK;EAAAC,EAAA;EAC5B,MAAM,CAACC,cAAc,EAAEC,iBAAiB,CAAC,GAAGR,QAAQ,CAACS,MAAM,CAACC,IAAI,CAACL,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;EAEnF,MAAMM,kBAAkB,GAAIC,KAAK,IAAK;IACpCJ,iBAAiB,CAACI,KAAK,CAACC,MAAM,CAACC,KAAK,CAAC;EACvC,CAAC;EAED,MAAMC,QAAQ,GAAID,KAAK,IAAK;IAC1B,MAAME,GAAG,GAAG,CAAC,CAAC,GAAGF,KAAK,IAAI,GAAG;IAC7B,OAAO,OAAOE,GAAG,cAAc;EACjC,CAAC;EAED,oBACEb,OAAA;IAAAc,QAAA,gBACEd,OAAA;MAAAc,QAAA,EAAI;IAAO;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAChBlB,OAAA;MAAAc,QAAA,GAAO,gBAEL,eAAAd,OAAA;QAAQW,KAAK,EAAEP,cAAe;QAACe,QAAQ,EAAEX,kBAAmB;QAAAM,QAAA,EACzDR,MAAM,CAACC,IAAI,CAACL,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAACkB,KAAK,CAAC,CAAC,CAAC,CAACC,GAAG,CAAEC,GAAG,iBAC3CtB,OAAA;UAAkBW,KAAK,EAAEW,GAAI;UAAAR,QAAA,EAC1BQ;QAAG,GADOA,GAAG;UAAAP,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAER,CACT;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACI,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACJ,CAAC,eACRlB,OAAA;MAAKuB,KAAK,EAAE;QAAEC,OAAO,EAAE,MAAM;QAAEC,mBAAmB,EAAE,iBAAiB;QAAEC,GAAG,EAAE;MAAM,CAAE;MAAAZ,QAAA,EACjFZ,IAAI,CAACmB,GAAG,CAAC,CAACM,IAAI,EAAEC,KAAK,kBACpB5B,OAAA;QAEE,mBAAiB,WAAW4B,KAAK,EAAG;QACpC,qBAAmBtB,MAAM,CAACuB,OAAO,CAACF,IAAI,CAAC,CAACN,GAAG,CAAC,CAAC,CAACC,GAAG,EAAEX,KAAK,CAAC,KAAK,GAAGW,GAAG,KAAKX,KAAK,EAAE,CAAC,CAACmB,IAAI,CAAC,MAAM,CAAE;QAC/FP,KAAK,EAAE;UACLQ,eAAe,EAAEnB,QAAQ,CAACoB,UAAU,CAACL,IAAI,CAACvB,cAAc,CAAC,CAAC,CAAC;UAC3D6B,KAAK,EAAE,MAAM;UACbC,MAAM,EAAE;QACV;MAAE,GAPGN,KAAK;QAAAb,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAQN,CACP;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC,EACLhB,IAAI,CAACmB,GAAG,CAAC,CAACM,IAAI,EAAEC,KAAK,kBACpB5B,OAAA,CAACF,OAAO;MAACqC,EAAE,EAAE,WAAWP,KAAK;IAAG,GAAMA,KAAK;MAAAb,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAC/C,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC;AAEV,CAAC;AAACf,EAAA,CA5CIF,OAAO;AAAAmC,EAAA,GAAPnC,OAAO;AA8Cb,eAAeA,OAAO;AAAC,IAAAmC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}