{"ast":null,"code":"var _jsxFileName = \"/Users/sam-mac/Documents/project/microtiter-plate-visualization/src/contexts/DataContext.js\",\n  _s = $RefreshSig$();\n// src/contexts/DataContext.js\nimport React, { createContext, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const DataContext = /*#__PURE__*/createContext();\nexport const DataProvider = ({\n  children\n}) => {\n  _s();\n  const [data, setData] = useState([]);\n  return /*#__PURE__*/_jsxDEV(DataContext.Provider, {\n    value: {\n      data,\n      setData\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 10,\n    columnNumber: 5\n  }, this);\n};\n_s(DataProvider, \"hhQqYsxLIv1exGOzUvDGOVv6fXw=\");\n_c = DataProvider;\nvar _c;\n$RefreshReg$(_c, \"DataProvider\");","map":{"version":3,"names":["React","createContext","useState","jsxDEV","_jsxDEV","DataContext","DataProvider","children","_s","data","setData","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/sam-mac/Documents/project/microtiter-plate-visualization/src/contexts/DataContext.js"],"sourcesContent":["// src/contexts/DataContext.js\nimport React, { createContext, useState } from 'react';\n\nexport const DataContext = createContext();\n\nexport const DataProvider = ({ children }) => {\n  const [data, setData] = useState([]);\n\n  return (\n    <DataContext.Provider value={{ data, setData }}>\n      {children}\n    </DataContext.Provider>\n  );\n};\n"],"mappings":";;AAAA;AACA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEvD,OAAO,MAAMC,WAAW,gBAAGJ,aAAa,CAAC,CAAC;AAE1C,OAAO,MAAMK,YAAY,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,EAAA;EAC5C,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EAEpC,oBACEE,OAAA,CAACC,WAAW,CAACM,QAAQ;IAACC,KAAK,EAAE;MAAEH,IAAI;MAAEC;IAAQ,CAAE;IAAAH,QAAA,EAC5CA;EAAQ;IAAAM,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACW,CAAC;AAE3B,CAAC;AAACR,EAAA,CARWF,YAAY;AAAAW,EAAA,GAAZX,YAAY;AAAA,IAAAW,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}