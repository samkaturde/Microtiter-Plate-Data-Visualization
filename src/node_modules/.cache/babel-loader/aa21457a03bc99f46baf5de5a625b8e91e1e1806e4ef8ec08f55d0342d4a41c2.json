{"ast":null,"code":"var _jsxFileName = \"/Users/sam-mac/Documents/project/microtiter-plate-visualization/src/components/HeatmapContent.js\";\nimport React from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst HeatmapContent = ({\n  data,\n  getColor,\n  selectedMetric\n}) => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      display: 'grid',\n      gridTemplateColumns: 'repeat(24, 1fr)',\n      gap: '1px'\n    },\n    children: data.map((well, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n      \"data-tooltip-id\": \"tooltip\",\n      \"data-tooltip-content\": Object.entries(well).map(([key, value]) => `${key}: ${value}`).join('\\n'),\n      style: {\n        backgroundColor: getColor(parseFloat(well[selectedMetric])),\n        width: '20px',\n        height: '20px'\n      }\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 6,\n    columnNumber: 5\n  }, this);\n};\n_c = HeatmapContent;\nexport default HeatmapContent;\nvar _c;\n$RefreshReg$(_c, \"HeatmapContent\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","HeatmapContent","data","getColor","selectedMetric","style","display","gridTemplateColumns","gap","children","map","well","index","Object","entries","key","value","join","backgroundColor","parseFloat","width","height","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/sam-mac/Documents/project/microtiter-plate-visualization/src/components/HeatmapContent.js"],"sourcesContent":["import React from 'react';\n\nconst HeatmapContent = ({data, getColor, selectedMetric}) => {\n\n  return (\n    <div style={{ display: 'grid', gridTemplateColumns: 'repeat(24, 1fr)', gap: '1px' }}>\n      {data.map((well, index) => (\n        <div\n          key={index}\n          data-tooltip-id=\"tooltip\"\n          data-tooltip-content={Object.entries(well).map(([key, value]) => `${key}: ${value}`).join('\\n')}\n          style={{\n            backgroundColor: getColor(parseFloat(well[selectedMetric])),\n            width: '20px',\n            height: '20px',\n          }}\n        ></div>\n      ))}\n    </div>\n  );\n};\n\nexport default HeatmapContent;\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,MAAMC,cAAc,GAAGA,CAAC;EAACC,IAAI;EAAEC,QAAQ;EAAEC;AAAc,CAAC,KAAK;EAE3D,oBACEJ,OAAA;IAAKK,KAAK,EAAE;MAAEC,OAAO,EAAE,MAAM;MAAEC,mBAAmB,EAAE,iBAAiB;MAAEC,GAAG,EAAE;IAAM,CAAE;IAAAC,QAAA,EACjFP,IAAI,CAACQ,GAAG,CAAC,CAACC,IAAI,EAAEC,KAAK,kBACpBZ,OAAA;MAEE,mBAAgB,SAAS;MACzB,wBAAsBa,MAAM,CAACC,OAAO,CAACH,IAAI,CAAC,CAACD,GAAG,CAAC,CAAC,CAACK,GAAG,EAAEC,KAAK,CAAC,KAAK,GAAGD,GAAG,KAAKC,KAAK,EAAE,CAAC,CAACC,IAAI,CAAC,IAAI,CAAE;MAChGZ,KAAK,EAAE;QACLa,eAAe,EAAEf,QAAQ,CAACgB,UAAU,CAACR,IAAI,CAACP,cAAc,CAAC,CAAC,CAAC;QAC3DgB,KAAK,EAAE,MAAM;QACbC,MAAM,EAAE;MACV;IAAE,GAPGT,KAAK;MAAAU,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAQN,CACP;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC;AAEV,CAAC;AAACC,EAAA,GAlBIzB,cAAc;AAoBpB,eAAeA,cAAc;AAAC,IAAAyB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}