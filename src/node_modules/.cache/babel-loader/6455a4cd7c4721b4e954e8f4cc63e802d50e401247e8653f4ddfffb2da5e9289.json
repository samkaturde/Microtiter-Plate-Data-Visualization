{"ast":null,"code":"var _jsxFileName = \"/Users/sam-mac/Documents/project/microtiter-plate-visualization/src/components/DataLoader.js\",\n  _s = $RefreshSig$();\n// src/components/DataLoader.js\nimport React, { useContext, useState } from 'react';\nimport Papa from 'papaparse';\nimport { DataContext } from '../contexts/DataContext';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst DataLoader = () => {\n  _s();\n  const {\n    setData\n  } = useContext(DataContext);\n  const [error, setError] = useState(null);\n  const handleFileChange = event => {\n    const file = event.target.files[0];\n    if (!file) return;\n    Papa.parse(file, {\n      header: true,\n      skipEmptyLines: true,\n      complete: results => {\n        if (results.errors.length) {\n          setError('Error parsing CSV file.');\n          console.error(results.errors);\n        } else {\n          const validData = results.data.every(row => 'well' in row);\n          if (validData) {\n            setData(results.data);\n            setError(null);\n          } else {\n            setError('CSV file is missing required columns.');\n          }\n        }\n      }\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Load Data\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"file\",\n      accept: \".csv\",\n      onChange: handleFileChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        color: 'red'\n      },\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 5\n  }, this);\n};\n_s(DataLoader, \"Q53wGXU/MRt4vpilMMp73dyjkoI=\");\n_c = DataLoader;\nexport default DataLoader;\nvar _c;\n$RefreshReg$(_c, \"DataLoader\");","map":{"version":3,"names":["React","useContext","useState","Papa","DataContext","jsxDEV","_jsxDEV","DataLoader","_s","setData","error","setError","handleFileChange","event","file","target","files","parse","header","skipEmptyLines","complete","results","errors","length","console","validData","data","every","row","children","fileName","_jsxFileName","lineNumber","columnNumber","type","accept","onChange","style","color","_c","$RefreshReg$"],"sources":["/Users/sam-mac/Documents/project/microtiter-plate-visualization/src/components/DataLoader.js"],"sourcesContent":["// src/components/DataLoader.js\nimport React, { useContext, useState } from 'react';\nimport Papa from 'papaparse';\nimport { DataContext } from '../contexts/DataContext';\n\nconst DataLoader = () => {\n  const { setData } = useContext(DataContext);\n  const [error, setError] = useState(null);\n\n  const handleFileChange = (event) => {\n    const file = event.target.files[0];\n    if (!file) return;\n\n    Papa.parse(file, {\n      header: true,\n      skipEmptyLines: true,\n      complete: (results) => {\n        if (results.errors.length) {\n          setError('Error parsing CSV file.');\n          console.error(results.errors);\n        } else {\n          const validData = results.data.every(row => 'well' in row);\n          if (validData) {\n            setData(results.data);\n            setError(null);\n          } else {\n            setError('CSV file is missing required columns.');\n          }\n        }\n      },\n    });\n  };\n\n  return (\n    <div>\n      <h2>Load Data</h2>\n      <input type=\"file\" accept=\".csv\" onChange={handleFileChange} />\n      {error && <div style={{ color: 'red' }}>{error}</div>}\n    </div>\n  );\n};\n\nexport default DataLoader;\n"],"mappings":";;AAAA;AACA,OAAOA,KAAK,IAAIC,UAAU,EAAEC,QAAQ,QAAQ,OAAO;AACnD,OAAOC,IAAI,MAAM,WAAW;AAC5B,SAASC,WAAW,QAAQ,yBAAyB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEtD,MAAMC,UAAU,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACvB,MAAM;IAAEC;EAAQ,CAAC,GAAGR,UAAU,CAACG,WAAW,CAAC;EAC3C,MAAM,CAACM,KAAK,EAAEC,QAAQ,CAAC,GAAGT,QAAQ,CAAC,IAAI,CAAC;EAExC,MAAMU,gBAAgB,GAAIC,KAAK,IAAK;IAClC,MAAMC,IAAI,GAAGD,KAAK,CAACE,MAAM,CAACC,KAAK,CAAC,CAAC,CAAC;IAClC,IAAI,CAACF,IAAI,EAAE;IAEXX,IAAI,CAACc,KAAK,CAACH,IAAI,EAAE;MACfI,MAAM,EAAE,IAAI;MACZC,cAAc,EAAE,IAAI;MACpBC,QAAQ,EAAGC,OAAO,IAAK;QACrB,IAAIA,OAAO,CAACC,MAAM,CAACC,MAAM,EAAE;UACzBZ,QAAQ,CAAC,yBAAyB,CAAC;UACnCa,OAAO,CAACd,KAAK,CAACW,OAAO,CAACC,MAAM,CAAC;QAC/B,CAAC,MAAM;UACL,MAAMG,SAAS,GAAGJ,OAAO,CAACK,IAAI,CAACC,KAAK,CAACC,GAAG,IAAI,MAAM,IAAIA,GAAG,CAAC;UAC1D,IAAIH,SAAS,EAAE;YACbhB,OAAO,CAACY,OAAO,CAACK,IAAI,CAAC;YACrBf,QAAQ,CAAC,IAAI,CAAC;UAChB,CAAC,MAAM;YACLA,QAAQ,CAAC,uCAAuC,CAAC;UACnD;QACF;MACF;IACF,CAAC,CAAC;EACJ,CAAC;EAED,oBACEL,OAAA;IAAAuB,QAAA,gBACEvB,OAAA;MAAAuB,QAAA,EAAI;IAAS;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAClB3B,OAAA;MAAO4B,IAAI,EAAC,MAAM;MAACC,MAAM,EAAC,MAAM;MAACC,QAAQ,EAAExB;IAAiB;MAAAkB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,EAC9DvB,KAAK,iBAAIJ,OAAA;MAAK+B,KAAK,EAAE;QAAEC,KAAK,EAAE;MAAM,CAAE;MAAAT,QAAA,EAAEnB;IAAK;MAAAoB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAM,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAClD,CAAC;AAEV,CAAC;AAACzB,EAAA,CAnCID,UAAU;AAAAgC,EAAA,GAAVhC,UAAU;AAqChB,eAAeA,UAAU;AAAC,IAAAgC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}