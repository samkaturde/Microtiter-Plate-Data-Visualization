{"ast":null,"code":"var _jsxFileName = \"/Users/sam-mac/Documents/project/microtiter-plate-visualization/src/components/Heatmap.js\",\n  _s = $RefreshSig$();\n// src/components/Heatmap.js\nimport React, { useContext, useState, useEffect } from 'react';\nimport { Tooltip } from 'react-tooltip';\nimport { DataContext } from '../contexts/DataContext';\nimport HeatmapContent from \"../components/HeatmapContent\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Heatmap = () => {\n  _s();\n  const {\n    data\n  } = useContext(DataContext);\n  const [selectedMetric, setSelectedMetric] = useState(Object.keys(data[0] || {})[1]);\n  useEffect(() => {\n    setSelectedMetric(Object.keys(data[0] || {})[1]);\n  }, [data]);\n  const handleMetricChange = event => {\n    const inputSelection = event.target.value;\n    setSelectedMetric(inputSelection);\n  };\n  const getColor = value => {\n    const hue = (1 - value) * 240;\n    return `hsl(${hue}, 100%, 50%)`;\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: data.length > 0 && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Heatmap\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Select Metric:\", /*#__PURE__*/_jsxDEV(\"select\", {\n          className: \"dropdown\",\n          value: selectedMetric,\n          onChange: handleMetricChange,\n          children: Object.keys(data[0] || {}).slice(1).map(key => /*#__PURE__*/_jsxDEV(\"option\", {\n            value: key,\n            children: key\n          }, key, false, {\n            fileName: _jsxFileName,\n            lineNumber: 34,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(HeatmapContent, {\n        getColor: getColor,\n        selectedMetric: selectedMetric\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Tooltip, {\n        id: \"tooltip\",\n        place: \"top\",\n        effect: \"solid\",\n        className: \"tooltip\",\n        multiline: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 5\n  }, this);\n};\n_s(Heatmap, \"lRTlVVG0/d7TFFM9QSa3eBQvMqU=\");\n_c = Heatmap;\nexport default Heatmap;\nvar _c;\n$RefreshReg$(_c, \"Heatmap\");","map":{"version":3,"names":["React","useContext","useState","useEffect","Tooltip","DataContext","HeatmapContent","jsxDEV","_jsxDEV","Fragment","_Fragment","Heatmap","_s","data","selectedMetric","setSelectedMetric","Object","keys","handleMetricChange","event","inputSelection","target","value","getColor","hue","children","length","fileName","_jsxFileName","lineNumber","columnNumber","className","onChange","slice","map","key","id","place","effect","multiline","_c","$RefreshReg$"],"sources":["/Users/sam-mac/Documents/project/microtiter-plate-visualization/src/components/Heatmap.js"],"sourcesContent":["// src/components/Heatmap.js\nimport React, { useContext, useState, useEffect } from 'react';\nimport { Tooltip } from 'react-tooltip';\nimport { DataContext } from '../contexts/DataContext';\nimport HeatmapContent from \"../components/HeatmapContent\";\n\nconst Heatmap = () => {\n  const { data } = useContext(DataContext);\n  const [selectedMetric, setSelectedMetric] = useState(Object.keys(data[0] || {})[1]);\n\n  useEffect(() => {\n    setSelectedMetric(Object.keys(data[0] || {})[1]);\n  }, [data])\n\n  const handleMetricChange = (event) => {\n    const inputSelection = event.target.value\n    setSelectedMetric(inputSelection);\n  };\n\n  const getColor = (value) => {\n    const hue = (1 - value) * 240;\n    return `hsl(${hue}, 100%, 50%)`;\n  };\n\n  return (\n    <div>\n      {data.length > 0 && (\n        <>\n          <h2>Heatmap</h2>\n          <label>\n            Select Metric:\n            <select className='dropdown' value={selectedMetric} onChange={handleMetricChange}>\n              {Object.keys(data[0] || {}).slice(1).map((key) => (\n                <option key={key} value={key}>\n                  {key}\n                </option>\n              ))}\n            </select>\n          </label>\n          <br/>\n          <HeatmapContent \n            getColor={getColor} \n            selectedMetric={selectedMetric} \n          />\n          <Tooltip \n            id=\"tooltip\" \n            place=\"top\" \n            effect=\"solid\" \n            className='tooltip'\n            multiline={true}\n          />\n        </>\n      )}\n    </div>\n  );\n};\n\nexport default Heatmap;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}